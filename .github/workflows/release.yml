name: Build for release

on:
  push:
    tags:
      - "v*.*.*"

env:
  BUILD_TYPE: Release

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: sudo apt-get install libudev-dev pkg-config

    - name: Setup Rust
      run: |
        rustup self update
        rustup update stable
        cargo install cargo-bundle

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Build and Bundle
      run: cargo bundle --release
    
    - name: Upload Linux
      uses: actions/upload-artifact@v3
      with:
        name: Linux
        path: ${{github.workspace}}/target/release/bundle/deb/*.deb

    - name: Add Linux to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/target/release/bundle/deb/*.deb

  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Rust
      run: |
        rustup self update
        rustup update stable

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --release
    
    - name: Upload Windows
      uses: actions/upload-artifact@v3
      with:
        name: Windows
        path: ${{github.workspace}}/target/release/*.exe
    
    - name: Add Windows to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/target/release/*.exe

  mac:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: brew install create-dmg

    - name: Setup Rust
      run: |
        rustup update stable
        cargo install cargo-bundle

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Build and Bundle
      run: |
        cargo bundle --release
        ${{github.workspace}}/scripts/package_dmg.sh release
    
    - name: Upload MacOS
      uses: actions/upload-artifact@v3
      with:
        name: MacOS
        path: ${{github.workspace}}/*.dmg
    
    - name: Add MacOS to Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/*.dmg